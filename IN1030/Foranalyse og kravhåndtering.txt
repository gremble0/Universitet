3a) Hovedforskjellene mellom plandrevet og smidig prosessmodeller ligger i når og hvor mye man planlegger om gangen. For eksempel vil smidige prosessmodeller planlegge litt og litt om gangen, kontinuerlig under utviklingsprosessen. Dette vil gjøre det enklere for utviklerne å tilpasse seg eventuelle endringer i kravspesifikasjoner eller andre problemer som kan oppstå underveis, mens det vektlegger samarbeid mellom kunden og utviklerne. En plandrevet prosessmodell er det motsatte av dette. Det vil si at på starten av utviklingen vil utviklerne sette seg ned og utforme en detaljert plan for hvordan hele utviklingsprosessen skal utføres. Dette krever mindre tid for planlegging underveis, er ikke like avhengig av samarbeid mellom utviklerne, men gjør det vesentlig vanskeligere å håndtere endringer underveis.
b) Tidsboksbaserte tidsflyt deler arbeidet opp i tidsbokser som har en tydelig start og slutt med prioriterte oppgaver som skal arbeides med innen en gitt periode. Flytbaserte smidige prosessmodeller deler arbeidet opp i oppgavebokser som har en oppgave med en prioritet som skal jobbes med til den er ferdig. Altså er forskjellene mellom de to hva som anses viktigst mellom oppgavenes fullførelse (flytbasert) eller en stødig progresjon (tidsboksbasert). 
Fordelen med å ha en tidsboksbbasert prosessmodell er at tidsfrister overholdes og at du alltid vil se en viss mengde progresjon, mens ulempen vil være at dersom noe ikke fullføres fullstendig innen fristen vil det ødelegge for resten av prosessen som kanskje er avhengig av at tidligere arbeid er ferdig. Alternativt hvis du blir ferdig med en oppgave før fristen vil du ikke ha noe å gjøre før neste tidsboks starter.
Fordelen med en flytbasert smidig prosessmodell er at den unngår problemene med tidsboksbaserte modellere. Altså - hvis noe går galt og en oppgave ikke fullføres innen den forventede fristen vil ikke dette nødvendigvis ødelegge for resten av prosessen og hvis man blir ferdig med noe tidlig kan man bare starte på neste oppgave. Ulempen med dette derimot er at det vil som regel ta lengre tid å fullføre et produkt og man vil dermed kanskje ikke ha et fullstendig produkt innen den endelige fristen til prosjektet. Man må derfor vurdere om man skal lage et helt fullført produkt eller et MVP (minimum viable product).
c) Muligheter for endring av kravspesifikasjoner virker relativt usannsynlig i dette tilfellet, og bør derfor være lite prioritert av utviklerne. Produktet avhenger direkte av teknologien bak VR, og har få andre spesifikasjoner som trengs å utvikles for å ha et ferdig produkt. Altså er den mest relevante kravspesifikasjonen oppkjøp av VR-briller (med mindre kunden ønsker selvutviklet VR-teknologi), som stort sett kun trengs å anvendes for kommersielt bruk. Når produktet i stor grad er uavhengig av utviklerne er ikke endringer i kravspesifikasjoner et spesielt viktig tema.
d) Ettersom vi har konkludert med at endringer i kravspesifikasjoner ikke trengs å fokuseres på av utviklerne, virker en plandrevet prosessmodell gunstig. Dette er fordi, siden vi ikke forventer endringer i kravspesifikasjoner vil det effektivisere utviklingsprosessen å ha en tydelig plan før vi starter som vi så kan delegere og følge steg for steg. En smidig modell kunne imidlertid tatt opp unødvendig mye tid kontinuerlig under utviklingsprosessen på diskusjon, som vi har forutsett at sannsynlig vil være unødvendig.